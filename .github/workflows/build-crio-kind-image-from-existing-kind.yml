name: Build CRI-O KinD Image (from existing KinD image)

on:
  workflow_dispatch:
    inputs:
      kubernetes_version:
        description: 'Kubernetes version (e.g., v1.33)'
        required: true
        default: 'v1.33'
      crio_version:
        description: 'CRI-O version (e.g., v1.33)'
        required: true
        default: 'v1.33'
      from_kind_image:
        description: 'kind FROM image (e.g., kindest/node:v1.33.2)'
        required: true
        default: 'kindest/node:v1.33.2'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  KUBERNETES_VERSION: ${{ github.event.inputs.kubernetes_version || 'v1.33' }}
  CRIO_VERSION: ${{ github.event.inputs.crio_version || 'v1.33' }}
  FROM_KIND_IMAGE: ${{ github.event.inputs.from_kind_image || 'kindest/node:v1.33.2' }}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/kindnode-crio

jobs:
  build-crio-kind-image-from-existing-kind:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: amd64
          - os: ubuntu-24.04-arm
            arch: arm64
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Introduction
      run: | 
        uname -a
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build CRI-O enabled KinD image
      id: build
      run: |
        docker build \
          --build-arg CRIO_VERSION=${{ env.CRIO_VERSION }} \
          --build-arg FROM_KIND_IMAGE=${{ env.FROM_KIND_IMAGE }} \
          --build-arg KUBERNETES_VERSION=${{ env.KUBERNETES_VERSION }} \
          -t kindnode/crio:${{ env.CRIO_VERSION }} \
          -f Containerfile .
    - name: Tag images for registry
      id: tag
      run: |
        # Tag for GitHub Container Registry
        docker tag kindnode/crio:${{ env.CRIO_VERSION }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.CRIO_VERSION }}-${{matrix.arch}}
        # docker tag kindnode/crio:${{ env.CRIO_VERSION }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
    - name: Push images to registry
      id: push
      run: |
        # Push and capture the manifest digest from output
        PUSH_OUTPUT=$(docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.CRIO_VERSION }}-${{matrix.arch}} 2>&1)
        echo "PUSH_OUTPUT: ${PUSH_OUTPUT}"
        PUSHED_DIGEST=$(echo "$PUSH_OUTPUT" | grep -o 'sha256:[a-f0-9]*' | tail -1)
        echo "pushed_digest=${PUSHED_DIGEST}" >> $GITHUB_OUTPUT
        echo "Pushed image digest: ${PUSHED_DIGEST}"
        # docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    - name: Generate image summary
      run: |
        echo "## Built Image" >> $GITHUB_STEP_SUMMARY
        echo "- CRI-O Image: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.CRIO_VERSION }}-${{matrix.arch}}\`" >> $GITHUB_STEP_SUMMARY
        echo "- CRI-O Image: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.push.outputs.pushed_digest }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
